{"version":3,"sources":["services/api.js","components/ImageGalleryItem.js","components/Modal.js","components/Loader.js","components/Button.js","components/ImageGallery.js","components/Searchbar.js","App.js","index.js"],"names":["API","this","api_key","api_url","api_type","api_orientation","_searchQuery","_page","value","a","url","searchQuery","axios","get","result","data","message","ImageGalleryItem","props","item","webformatURL","largeImageURL","tags","className","src","alt","onClick","handleImageClick","PureComponent","modal","document","querySelector","Modal","handleOverlayclick","event","target","currentTarget","onModalClose","handleEscKey","code","window","addEventListener","removeEventListener","createPortal","Component","SpinnerLoader","type","color","height","width","timeout","Button","scrollTo","top","documentElement","scrollHeight","behavior","imagesearch","imageSearchAPI","ImageGallery","state","searchResultArray","searchElements","status","imageLargeURL","errorMessage","image","setState","handleMoreButtonClick","page","search","then","prev","hits","catch","error","prevProps","prevState","resetPage","length","total","map","element","id","title","text","Searchbar","searchImage","handlerChange","onSubmit","preventDefault","trim","alert","placeholder","onChange","App","input","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.423668e1.chunk.js","sourcesContent":["import axios from 'axios';\nexport default class API {\n  constructor() {\n    this.api_key = '5018958-ed49ccd90878e6614abdf24a6';\n    this.api_url = 'https://pixabay.com/api/';\n    this.api_type = 'image_type=photo';\n    this.api_orientation = 'orientation=horizontal';\n    this._searchQuery = '';\n    this._page = 1;\n  }\n\n  get searchQuery() {\n    return this._searchQuery;\n  }\n\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  set page(value) {\n    return (this._page += value);\n  }\n\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  async search() {\n    let url = `${this.api_url}?${this.api_type}&${this.api_orientation}&q=${this.searchQuery}&page=${this._page}&per_page=12&key=${this.api_key}\n`;\n    try {\n      const result = await axios.get(url);\n      const data = result.data;\n      return data;\n    } catch (error) {\n      return error.message;\n    }\n  }\n}\n","import { PureComponent } from 'react';\n\nexport default class ImageGalleryItem extends PureComponent {\n  render() {\n    const { webformatURL, largeImageURL, tags } = this.props.item;\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          src={webformatURL}\n          alt={tags}\n          onClick={() => this.props.handleImageClick(largeImageURL)}\n          className=\"ImageGalleryItem-image\"\n        />\n      </li>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nconst modal = document.querySelector('#modal');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleEscKey);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleEscKey);\n  }\n\n  handleOverlayclick = event => {\n    if (event.target === event.currentTarget) {\n      this.props.onModalClose();\n    }\n  };\n\n  handleEscKey = event => {\n    if (event.code === 'Escape') {\n      this.props.onModalClose();\n    }\n  };\n\n  render() {\n    const { largeImageURL } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleOverlayclick}>\n        <div className=\"Modal\">\n          <img src={largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modal,\n    );\n  }\n}\n","import Loader from 'react-loader-spinner';\n\nfunction SpinnerLoader() {\n  return (\n    <Loader\n      className=\"SpinnerLoader\"\n      type=\"Watch\"\n      color=\"#303f9f\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n}\n\nexport default SpinnerLoader;\n","function Button() {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n}\nexport default Button;\n","import { Component } from 'react';\nimport imageSearchAPI from '../services/api';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Modal from './Modal';\nimport SpinnerLoader from './Loader';\nimport Button from './Button';\nimport { Notification } from 'react-pnotify';\n\nconst imagesearch = new imageSearchAPI();\n\nexport default class ImageGallery extends Component {\n  state = {\n    searchResultArray: [],\n    searchElements: null,\n    status: 'init',\n    imageLargeURL: '',\n    errorMessage: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this.setState({ status: 'pending' });\n      imagesearch.resetPage();\n      imagesearch.searchQuery = this.props.searchQuery;\n      imagesearch.search().then(searchResultArray => {\n        if (searchResultArray.hits.length > 0) {\n          this.setState({\n            searchResultArray: searchResultArray.hits,\n            searchElements: searchResultArray.total,\n            status: 'success',\n          });\n        } else {\n          this.setState({\n            status: 'error',\n            errorMessage: 'No images found ...',\n          });\n        }\n      });\n    }\n  }\n\n  handleImageClick = image => {\n    this.setState({\n      imageLargeURL: image,\n      status: 'showmodal',\n    });\n  };\n  onModalClose = () => {\n    this.setState({\n      status: 'success',\n    });\n  };\n\n  handleMoreButtonClick = event => {\n    imagesearch.page = 1;\n    imagesearch\n      .search()\n      .then(searchResultArray => {\n        this.setState(prev => ({\n          searchResultArray: [\n            ...prev.searchResultArray,\n            ...searchResultArray.hits,\n          ],\n          status: 'success',\n        }));\n        Button();\n      })\n      .catch(error => {\n        this.setState({ status: 'error', errorMessage: error });\n      });\n  };\n\n  render() {\n    const {\n      status,\n      searchResultArray,\n      searchElements,\n      imageLargeURL,\n      errorMessage,\n    } = this.state;\n\n    if (status === 'init') {\n      return <h1 className=\"title\"></h1>;\n    }\n\n    if (status === 'pending') {\n      return <SpinnerLoader />;\n    }\n\n    if (status === 'success') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {searchResultArray.map(element => (\n              <ImageGalleryItem\n                key={element.id}\n                item={element}\n                handleImageClick={this.handleImageClick}\n              />\n            ))}\n          </ul>\n          {searchElements > 12 && (\n            <button\n              className=\"Button\"\n              type=\"button\"\n              id=\"more\"\n              onClick={this.handleMoreButtonClick}\n            >\n              load more\n            </button>\n          )}\n        </>\n      );\n    }\n\n    if (status === 'showmodal') {\n      return (\n        <Modal largeImageURL={imageLargeURL} onModalClose={this.onModalClose} />\n      );\n    }\n\n    if (status === 'error') {\n      return <Notification type=\"Error\" title=\"Error\" text={errorMessage} />;\n    }\n  }\n}\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nexport default class Searchbar extends Component {\n  state = {\n    searchImage: '',\n  };\n\n  handlerChange = event => {\n    this.setState({ searchImage: event.target.value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    if (this.state.searchImage.trim() === '') {\n      alert('Please, enter some for search image ... ');\n      return;\n    }\n    this.props.onSubmit(this.state.searchImage);\n    this.setState({ searchImage: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.onSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            value={this.state.searchImage}\n            type=\"search\"\n            placeholder=\"Search images and photos\"\n            onChange={this.handlerChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport ImageGallery from './components/ImageGallery';\nimport Searchbar from './components/Searchbar';\n\nclass App extends Component {\n  state = {\n    searchImage: '',\n  };\n\n  onSubmit = input => {\n    this.setState({\n      searchImage: input,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onSubmit} />\n        <ImageGallery searchQuery={this.state.searchImage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}