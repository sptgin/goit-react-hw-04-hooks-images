{"version":3,"sources":["services/api.js","components/ImageGalleryItem.js","components/Modal.js","components/Loader.js","components/Button.js","components/ImageGallery.js","components/Searchbar.js","App.js","index.js"],"names":["API","this","api_key","api_url","api_type","api_orientation","_searchQuery","_page","value","a","url","searchQuery","axios","get","result","data","message","ImageGalleryItem","item","handleImageClick","webformatURL","largeImageURL","tags","className","src","alt","onClick","modal","document","querySelector","Modal","onModalClose","useEffect","window","addEventListener","handleEscKey","removeEventListener","event","code","createPortal","target","currentTarget","SpinnerLoader","type","color","height","width","timeout","Button","scrollTo","top","documentElement","scrollHeight","behavior","imagesearch","imageSearchAPI","ImageGallery","useState","searchResultArray","setSearchResultArray","searchElements","setSearchElements","status","setStatus","imageLargeURL","setImageLargeURL","errorMessage","setErrorMessage","resetPage","search","then","hits","length","total","image","map","element","id","page","prev","catch","error","title","text","Searchbar","onSubmit","searchImage","setSearchImage","preventDefault","trim","alert","placeholder","onChange","App","input","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28bf8e51.chunk.js","sourcesContent":["import axios from 'axios';\nexport default class API {\n  constructor() {\n    this.api_key = '5018958-ed49ccd90878e6614abdf24a6';\n    this.api_url = 'https://pixabay.com/api/';\n    this.api_type = 'image_type=photo';\n    this.api_orientation = 'orientation=horizontal';\n    this._searchQuery = '';\n    this._page = 1;\n  }\n\n  get searchQuery() {\n    return this._searchQuery;\n  }\n\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  set page(value) {\n    return (this._page += value);\n  }\n\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  async search() {\n    let url = `${this.api_url}?${this.api_type}&${this.api_orientation}&q=${this.searchQuery}&page=${this._page}&per_page=12&key=${this.api_key}\n`;\n    try {\n      const result = await axios.get(url);\n      const data = result.data;\n      return data;\n    } catch (error) {\n      return error.message;\n    }\n  }\n}\n","export default function ImageGalleryItem({ item, handleImageClick }) {\n  const { webformatURL, largeImageURL, tags } = item;\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        onClick={() => handleImageClick(largeImageURL)}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nconst modal = document.querySelector('#modal');\n\nexport default function Modal({ largeImageURL, onModalClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscKey);\n    return () => {\n      window.removeEventListener('keydown', handleEscKey);\n    };\n  });\n\n  const handleOverlayclick = event => {\n    if (event.target === event.currentTarget) {\n      onModalClose();\n    }\n  };\n\n  const handleEscKey = event => {\n    if (event.code === 'Escape') {\n      onModalClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleOverlayclick}>\n      <div className=\"Modal\">\n        <img src={largeImageURL} alt=\"\" />\n      </div>\n    </div>,\n    modal,\n  );\n}\n","import Loader from 'react-loader-spinner';\n\nfunction SpinnerLoader() {\n  return (\n    <Loader\n      className=\"SpinnerLoader\"\n      type=\"Watch\"\n      color=\"#303f9f\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n}\n\nexport default SpinnerLoader;\n","function Button() {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n}\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport imageSearchAPI from '../services/api';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Modal from './Modal';\nimport SpinnerLoader from './Loader';\nimport Button from './Button';\nimport { Notification } from 'react-pnotify';\n\nconst imagesearch = new imageSearchAPI();\n\nexport default function ImageGallery({ searchQuery }) {\n  const [searchResultArray, setSearchResultArray] = useState([]);\n  const [searchElements, setSearchElements] = useState(null);\n  const [status, setStatus] = useState('init');\n  const [imageLargeURL, setImageLargeURL] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    setStatus('pending');\n    imagesearch.resetPage();\n    imagesearch.searchQuery = searchQuery;\n    imagesearch.search().then(searchResultArray => {\n      if (searchResultArray.hits.length > 0) {\n        setSearchResultArray(searchResultArray.hits);\n        setSearchElements(searchResultArray.total);\n        setStatus('success');\n      } else {\n        setStatus('error');\n        setErrorMessage('No images found ...');\n      }\n    });\n  }, [searchQuery]);\n\n  const handleImageClick = image => {\n    setImageLargeURL(image);\n    setStatus('showmodal');\n  };\n\n  const onModalClose = () => {\n    setStatus('success');\n  };\n\n  const handleMoreButtonClick = event => {\n    imagesearch.page = 1;\n    imagesearch\n      .search()\n      .then(searchResultArray => {\n        setSearchResultArray(prev => [...prev, ...searchResultArray.hits]);\n        setStatus('success');\n        Button();\n      })\n      .catch(error => {\n        setStatus('error');\n        setErrorMessage(error);\n      });\n  };\n\n  if (status === 'init') {\n    return <h1 className=\"title\"></h1>;\n  }\n\n  if (status === 'pending') {\n    return <SpinnerLoader />;\n  }\n\n  if (status === 'success') {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {searchResultArray.map(element => (\n            <ImageGalleryItem\n              key={element.id}\n              item={element}\n              handleImageClick={handleImageClick}\n            />\n          ))}\n        </ul>\n        {searchElements > 12 && (\n          <button\n            className=\"Button\"\n            type=\"button\"\n            id=\"more\"\n            onClick={handleMoreButtonClick}\n          >\n            load more\n          </button>\n        )}\n      </>\n    );\n  }\n\n  if (status === 'showmodal') {\n    return <Modal largeImageURL={imageLargeURL} onModalClose={onModalClose} />;\n  }\n\n  if (status === 'error') {\n    return <Notification type=\"Error\" title=\"Error\" text={errorMessage} />;\n  }\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchImage, setSearchImage] = useState('');\n\n  const handlerChange = event => {\n    setSearchImage(event.target.value);\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    if (searchImage.trim() === '') {\n      alert('Please, enter some for search image ... ');\n      return;\n    }\n    onSubmit(searchImage);\n    setSearchImage('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onSubmitForm}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          value={searchImage}\n          type=\"search\"\n          placeholder=\"Search images and photos\"\n          onChange={handlerChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport ImageGallery from './components/ImageGallery';\nimport Searchbar from './components/Searchbar';\n\nexport default function App() {\n  const [searchImage, setSearchImage] = useState('');\n\n  const onSubmit = input => {\n    setSearchImage(input);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onSubmit} />\n      <ImageGallery searchQuery={searchImage} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}